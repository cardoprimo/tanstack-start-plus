/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignOutImport } from './routes/sign-out'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as GalleryIndexImport } from './routes/gallery/index'
import { Route as AuthedUploadImport } from './routes/_authed/upload'

// Create/Update Routes

const SignOutRoute = SignOutImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GalleryIndexRoute = GalleryIndexImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedUploadRoute = AuthedUploadImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/sign-out': {
      id: '/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof SignOutImport
      parentRoute: typeof rootRoute
    }
    '/_authed/upload': {
      id: '/_authed/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof AuthedUploadImport
      parentRoute: typeof AuthedImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedUploadRoute: typeof AuthedUploadRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedUploadRoute: AuthedUploadRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/sign-out': typeof SignOutRoute
  '/upload': typeof AuthedUploadRoute
  '/gallery': typeof GalleryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/sign-out': typeof SignOutRoute
  '/upload': typeof AuthedUploadRoute
  '/gallery': typeof GalleryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/sign-out': typeof SignOutRoute
  '/_authed/upload': typeof AuthedUploadRoute
  '/gallery/': typeof GalleryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/sign-out' | '/upload' | '/gallery'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/sign-out' | '/upload' | '/gallery'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/sign-out'
    | '/_authed/upload'
    | '/gallery/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  SignOutRoute: typeof SignOutRoute
  GalleryIndexRoute: typeof GalleryIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  SignOutRoute: SignOutRoute,
  GalleryIndexRoute: GalleryIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/sign-out",
        "/gallery/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/upload"
      ]
    },
    "/sign-out": {
      "filePath": "sign-out.tsx"
    },
    "/_authed/upload": {
      "filePath": "_authed/upload.tsx",
      "parent": "/_authed"
    },
    "/gallery/": {
      "filePath": "gallery/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
